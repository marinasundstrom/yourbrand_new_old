x-generator: NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: Store.Web
  version: v1
servers:
  - url: https://localhost:7188
paths:
  /api/v1/products:
    get:
      tags:
        - Products
        - Products
      operationId: Products_GetProducts
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            nullable: true
          x-position: 2
        - name: searchTerm
          in: query
          schema:
            type: string
          x-position: 3
        - name: categoryPath
          in: query
          schema:
            type: string
          x-position: 4
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultOfProduct"
        404:
          description: ""
  /api/v1/products/{id}:
    get:
      tags:
        - Products
        - Products
      operationId: Products_GetProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        404:
          description: ""
  /api/v1/productCategories:
    get:
      tags:
        - ProductCategories
        - ProductCategories
      operationId: ProductCategories_GetProductCategories
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCategoryTreeRoot"
        404:
          description: ""
  /api/v1/productCategories/{id}:
    get:
      tags:
        - ProductCategories
        - ProductCategories
      operationId: ProductCategories_GetProductCategoryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductCategory"
        404:
          description: ""
  /api/v1/cart:
    get:
      tags:
        - Cart
        - Cart
      operationId: Cart_GetCart
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        404:
          description: ""
  /api/v1/cart/items:
    post:
      tags:
        - Cart
        - Cart
      operationId: Cart_AddCartItem
      requestBody:
        x-name: request
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddCartItemRequest"
        required: true
        x-position: 1
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
        404:
          description: ""
  /api/v1/cart/items/{cartItemId}/quantity:
    put:
      tags:
        - Cart
        - Cart
      operationId: Cart_UpdateCartItemQuantity
      parameters:
        - name: cartItemId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      requestBody:
        x-name: request
        description: ""
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateCartItemQuantityRequest"
        required: true
        x-position: 2
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
        404:
          description: ""
  /api/v1/cart/items/{cartItemId}:
    delete:
      tags:
        - Cart
        - Cart
      operationId: Cart_RemoveCartItem
      parameters:
        - name: cartItemId
          in: path
          required: true
          schema:
            type: string
          x-position: 1
      responses:
        200:
          description: ""
        404:
          description: ""
components:
  schemas:
    PagedResultOfProduct:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Product"
        total:
          type: integer
          format: int32
    Product:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        category:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/ProductCategoryParent"
        image:
          type: string
          nullable: true
        description:
          type: string
        price:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        handle:
          type: string
    ProductCategoryParent:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        handle:
          type: string
        path:
          type: string
        parent:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/ProductCategoryParent"
        productsCount:
          type: integer
          format: int64
    ProductCategoryTreeRoot:
      type: object
      additionalProperties: false
      properties:
        categories:
          type: array
          items:
            $ref: "#/components/schemas/ProductCategoryTreeNode"
        productsCount:
          type: integer
          format: int64
    ProductCategoryTreeNode:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        handle:
          type: string
        path:
          type: string
        description:
          type: string
          nullable: true
        parent:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/ProductCategoryParent"
        subCategories:
          type: array
          items:
            $ref: "#/components/schemas/ProductCategoryTreeNode"
        productsCount:
          type: integer
          format: int64
        canAddProducts:
          type: boolean
    ProductCategory:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        handle:
          type: string
        path:
          type: string
        parent:
          nullable: true
          oneOf:
            - $ref: "#/components/schemas/ProductCategoryParent"
        productsCount:
          type: integer
          format: int64
    Cart:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/CartItem"
    CartItem:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        image:
          type: string
          nullable: true
        productId:
          type: integer
          format: int64
          nullable: true
        productHandle:
          type: string
          nullable: true
        description:
          type: string
        price:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        quantity:
          type: integer
          format: int32
        total:
          type: number
          format: decimal
    AddCartItemRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        image:
          type: string
          nullable: true
        productId:
          type: integer
          format: int64
          nullable: true
        productHandle:
          type: string
          nullable: true
        description:
          type: string
        price:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        quantity:
          type: integer
          format: int32
    UpdateCartItemQuantityRequest:
      type: object
      additionalProperties: false
      properties:
        quantity:
          type: integer
          format: int32
  securitySchemes:
    JWT:
      type: apiKey
      description: "Type into the textbox: Bearer {your JWT token}."
      name: Authorization
      in: header
