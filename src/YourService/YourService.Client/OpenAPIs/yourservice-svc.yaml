x-generator: NSwag v14.0.0.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: yourbrand-service-svc
  version: v1
servers:
  - url: https://localhost:7149
paths:
  /v1/todos:
    get:
      tags:
        - Todos
        - Todos
      operationId: Todos_GetTodos
      parameters:
        - name: isCompleted
          in: query
          schema:
            type: boolean
            nullable: true
          x-position: 1
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
          x-position: 2
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
          x-position: 3
        - name: searchTerm
          in: query
          schema:
            type: string
            nullable: true
          x-position: 4
        - name: sortBy
          in: query
          schema:
            type: string
            nullable: true
          x-position: 5
        - name: sortDirection
          in: query
          schema:
            oneOf:
              - nullable: true
                oneOf:
                  - $ref: "#/components/schemas/SortDirection"
          x-position: 6
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultOfTodo"
    post:
      tags:
        - Todos
        - Todos
      operationId: Todos_CreateTodo
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTodoRequest"
        required: true
        x-position: 1
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"
      security:
        - JWT: []
  /v1/users:
    get:
      tags:
        - Users
        - Users
      operationId: UsersGetUsers
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
          x-position: 1
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 10
          x-position: 2
        - name: searchTerm
          in: query
          schema:
            type: string
            nullable: true
          x-position: 3
        - name: sortBy
          in: query
          schema:
            type: string
            nullable: true
          x-position: 4
        - name: sortDirection
          in: query
          schema:
            oneOf:
              - nullable: true
                oneOf:
                  - $ref: "#/components/schemas/SortDirection"
          x-position: 5
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResultOfUser"
    post:
      tags:
        - Users
        - Users
      operationId: Users_CreateUser
      requestBody:
        x-name: request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUser"
        required: true
        x-position: 1
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
  /v1/users/userInfo:
    get:
      tags:
        - Users
        - Users
      operationId: Users_GetUserInfo
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"
components:
  schemas:
    PagedResultOfTodo:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Todo"
        total:
          type: integer
          format: int32
    Todo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        text:
          type: string
    SortDirection:
      type: string
      description: ""
      x-enumNames:
        - Desc
        - Asc
      enum:
        - Desc
        - Asc
    CreateTodoRequest:
      type: object
      additionalProperties: false
      properties:
        text:
          type: string
    PagedResultOfUser:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/User"
        total:
          type: integer
          format: int32
    User:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    UserInfo:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
    CreateUser:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
  securitySchemes:
    JWT:
      type: apiKey
      description: "Type into the textbox: Bearer {your JWT token}."
      name: Authorization
      in: header
