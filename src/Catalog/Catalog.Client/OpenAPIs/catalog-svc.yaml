x-generator: NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v10.0.0.0))
openapi: 3.0.0
info:
  title: Catalog API
  version: 1.0.0
servers:
- url: https://localhost:7134
paths:
  /api/productCategories:
    get:
      tags:
      - ProductCategories
      operationId: ProductCategories_GetProductCategories
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
        x-position: 2
      - name: searchTerm
        in: query
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfProductCategory'
    post:
      tags:
      - ProductCategories
      operationId: ProductCategories_CreateProductCategory
      requestBody:
        x-name: request
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductCategoryRequest'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        400:
          description: ''
  /api/productCategories/tree:
    get:
      tags:
      - ProductCategories
      operationId: ProductCategories_GetProductCategoryTree
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryTreeRoot'
        400:
          description: ''
  /api/productCategories/{idOrPath}:
    put:
      tags:
      - ProductCategories
      operationId: ProductCategories_UpdateProductCategoryDetails
      parameters:
      - name: idOrPath
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductCategoryDetailsRequest'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
    delete:
      tags:
      - ProductCategories
      operationId: ProductCategories_DeleteProductCategory
      parameters:
      - name: idOrPath
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
        404:
          description: ''
    get:
      tags:
      - ProductCategories
      operationId: ProductCategories_GetProductCategoryById
      parameters:
      - name: idOrPath
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        default:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
  /api/products:
    get:
      tags:
      - Products
      operationId: Products_GetProducts
      parameters:
      - name: storeId
        in: query
        schema:
          type: string
        x-position: 1
      - name: brandIdOrHandle
        in: query
        schema:
          type: string
        x-position: 2
      - name: includeUnlisted
        in: query
        schema:
          type: boolean
        x-position: 3
      - name: groupProducts
        in: query
        schema:
          type: boolean
        x-position: 4
      - name: page
        in: query
        schema:
          type: integer
          format: int32
        x-position: 5
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
        x-position: 6
      - name: searchTerm
        in: query
        schema:
          type: string
        x-position: 7
      - name: categoryPathOrId
        in: query
        schema:
          type: string
        x-position: 8
      - name: sortBy
        in: query
        schema:
          type: string
        x-position: 9
      - name: sortDirection
        in: query
        schema:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SortDirection'
        x-position: 10
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfProduct'
    post:
      tags:
      - Products
      operationId: Products_CreateProduct
      requestBody:
        x-name: request
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: ''
  /api/products/{idOrHandle}:
    get:
      tags:
      - Products
      operationId: Products_GetProductById
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: ''
    put:
      tags:
      - Products
      operationId: Products_UpdateProductDetails
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductDetailsRequest'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
    delete:
      tags:
      - Products
      operationId: Products_DeleteProduct
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
        404:
          description: ''
  /api/products/{idOrHandle}/price:
    put:
      tags:
      - Products
      operationId: Products_UpdateProductPrice
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductPriceRequest'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
  /api/products/{idOrHandle}/image:
    post:
      tags:
      - Products
      operationId: Products_UploadProductImage
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
        404:
          description: ''
  /api/products/{idOrHandle}/handle:
    put:
      tags:
      - Products
      operationId: Products_UpdateProductHandle
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductHandleRequest'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
  /api/products/{idOrHandle}/category:
    put:
      tags:
      - Products
      operationId: Products_UpdateProductCategory
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: request
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductCategoryRequest'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
  /api/stores:
    get:
      tags:
      - Stores
      operationId: Stores_GetStores
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchString
        in: query
        schema:
          type: string
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          type: string
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfStore'
    post:
      tags:
      - Stores
      operationId: Stores_CreateStore
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStore'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
  /api/stores/{IdOrHandle}:
    get:
      tags:
      - Stores
      operationId: Stores_GetStore
      parameters:
      - name: IdOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
  /api/stores/{id}:
    put:
      tags:
      - Stores
      operationId: Stores_UpdateStore
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStore'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
    delete:
      tags:
      - Stores
      operationId: Stores_DeleteStore
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
  /api/products/{id}/options:
    get:
      tags:
      - Products
      operationId: Products_GetProductOptions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: variantId
        in: query
        schema:
          type: string
          nullable: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductOption'
    post:
      tags:
      - Products
      operationId: Products_CreateProductOption
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductOptionData'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
  /api/products/{id}/options/{optionId}:
    put:
      tags:
      - Products
      operationId: Products_UpdateProductOption
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: optionId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductOptionData'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
    delete:
      tags:
      - Products
      operationId: Products_DeleteProductOption
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: optionId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/products/{id}/options/{optionId}/values:
    post:
      tags:
      - Products
      operationId: Products_CreateProductOptionValue
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: optionId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductOptionValueData'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionValue'
    get:
      tags:
      - Products
      operationId: Products_GetProductOptionValues
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: optionId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionValue'
  /api/products/{id}/options/{optionId}/values/{valueId}:
    post:
      tags:
      - Products
      operationId: Products_DeleteProductOptionValue
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: optionId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      - name: valueId
        in: path
        required: true
        schema:
          type: string
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/products/{id}/options/groups:
    get:
      tags:
      - Products
      operationId: Products_GetOptionGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OptionGroup'
    post:
      tags:
      - Products
      operationId: Products_CreateOptionGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductOptionGroupData'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionGroup'
  /api/products/{id}/options/groups/{optionGroupId}:
    put:
      tags:
      - Products
      operationId: Products_UpdateOptionGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: optionGroupId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductOptionGroupData'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionGroup'
    delete:
      tags:
      - Products
      operationId: Products_DeleteOptionGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: optionGroupId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/products/{idOrHandle}/variants:
    get:
      tags:
      - Products
      operationId: Products_GetVariants
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchString
        in: query
        schema:
          type: string
          nullable: true
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
          nullable: true
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          type: string
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfProduct'
  /api/products/{id}/variants/{variantId}:
    delete:
      tags:
      - Products
      operationId: Products_DeleteVariant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: variantId
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    put:
      tags:
      - Products
      operationId: Products_UpdateVariant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: variantId
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 2
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductVariantData'
        required: true
        x-position: 3
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/products/{idOrHandle}/variants/{variantIdOrHandle}:
    get:
      tags:
      - Products
      operationId: Products_GetVariant
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      - name: variantIdOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/products/{idOrHandle}/variants/find:
    post:
      tags:
      - Products
      operationId: Products_FindVariantByAttributeValues
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: selectedAttributeValues
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
                nullable: true
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /api/products/{idOrHandle}/variants/find2:
    post:
      tags:
      - Products
      operationId: Products_FindVariantByAttributeValues2
      parameters:
      - name: idOrHandle
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: selectedAttributeValues
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: string
                nullable: true
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /api/products/{id}/Variants/{variantId}/options:
    get:
      tags:
      - Products
      operationId: Products_GetVariantAttributes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: variantId
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariantAttribute'
  /api/products/{id}/variants:
    post:
      tags:
      - Products
      operationId: Products_CreateVariant
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductVariantData'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        400:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/products/{id}/variants/{variantId}/uploadImage:
    post:
      tags:
      - Products
      operationId: Products_UploadVariantImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 1
      - name: variantId
        in: path
        required: true
        schema:
          type: integer
          format: int64
        x-position: 2
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: string
  /api/attributes:
    get:
      tags:
      - Attributes
      operationId: Attributes_GetAttributes
      parameters:
      - name: ids
        in: query
        style: form
        explode: true
        schema:
          type: array
          nullable: true
          items:
            type: string
        x-position: 1
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 0
        x-position: 2
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 3
      - name: searchString
        in: query
        schema:
          type: string
        x-position: 4
      - name: sortBy
        in: query
        schema:
          type: string
        x-position: 5
      - name: sortDirection
        in: query
        schema:
          type: string
        x-position: 6
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfAttribute'
    post:
      tags:
      - Attributes
      operationId: Attributes_CreateAttribute
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAttribute'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
  /api/attributes/{id}:
    get:
      tags:
      - Attributes
      operationId: Attributes_GetAttribute
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attribute'
    put:
      tags:
      - Attributes
      operationId: Attributes_UpdateAttribute
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAttribute'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
    delete:
      tags:
      - Attributes
      operationId: Attributes_DeleteAttribute
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
  /api/attributes/{id}/values:
    get:
      tags:
      - Attributes
      operationId: Attributes_GetAttributesValues
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionValue'
    post:
      tags:
      - Attributes
      operationId: Attributes_CreateAttributeValue
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductAttributeValueData'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeValue'
  /api/attributes/{id}/values/{valueId}:
    post:
      tags:
      - Attributes
      operationId: Attributes_DeleteAttributeValue
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      - name: valueId
        in: path
        required: true
        schema:
          type: string
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/attributes/Groups:
    get:
      tags:
      - Attributes
      operationId: Attributes_GetAttributeGroups
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AttributeGroup'
  /api/attributes/groups:
    post:
      tags:
      - Attributes
      operationId: Attributes_CreateAttributeGroup
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductAttributeGroupData'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
  /api/attributes/groups/{id}:
    put:
      tags:
      - Attributes
      operationId: Attributes_UpdateAttributeGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      requestBody:
        x-name: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductAttributeGroupData'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttributeGroup'
    delete:
      tags:
      - Attributes
      operationId: Attributes_DeleteAttributeGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/options:
    get:
      tags:
      - Options
      operationId: Options_GetOptions
      parameters:
      - name: includeChoices
        in: query
        schema:
          type: boolean
          default: false
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Option'
  /api/options/{id}/values:
    get:
      tags:
      - Options
      operationId: Options_GetOptionValues
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OptionValue'
  /api/currencies:
    get:
      tags:
      - Currencies
      operationId: Currencies_GetCurrencies
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchString
        in: query
        schema:
          type: string
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          type: string
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfCurrency'
  /api/brands:
    get:
      tags:
      - Brands
      operationId: Brands_GetBrands
      parameters:
      - name: page
        in: query
        schema:
          type: integer
          format: int32
          default: 1
        x-position: 1
      - name: pageSize
        in: query
        schema:
          type: integer
          format: int32
          default: 10
        x-position: 2
      - name: searchString
        in: query
        schema:
          type: string
        x-position: 3
      - name: sortBy
        in: query
        schema:
          type: string
        x-position: 4
      - name: sortDirection
        in: query
        schema:
          type: string
        x-position: 5
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedResultOfBrand'
    post:
      tags:
      - Brands
      operationId: Brands_CreateBrand
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBrand'
        required: true
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
  /api/brands/{id}:
    get:
      tags:
      - Brands
      operationId: Brands_GetBrand
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brand'
    put:
      tags:
      - Brands
      operationId: Brands_UpdateBrand
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: dto
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBrand'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
    delete:
      tags:
      - Brands
      operationId: Brands_DeleteBrand
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        200:
          description: ''
components:
  schemas:
    PagedResultOfProductCategory:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
        total:
          type: integer
          format: int32
    ProductCategory:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
          nullable: true
        parent:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ParentProductCategory'
        canAddProducts:
          type: boolean
        productsCount:
          type: integer
          format: int64
        handle:
          type: string
        path:
          type: string
    ParentProductCategory:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
          nullable: true
        handle:
          type: string
        path:
          type: string
        parent:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ParentProductCategory'
        productsCount:
          type: integer
          format: int64
    ProductCategoryTreeRoot:
      type: object
      additionalProperties: false
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategoryTreeNode'
        productsCount:
          type: integer
          format: int64
    ProductCategoryTreeNode:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        handle:
          type: string
        path:
          type: string
        description:
          type: string
          nullable: true
        parent:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ParentProductCategoryTreeNode'
        subCategories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategoryTreeNode'
        productsCount:
          type: integer
          format: int64
        canAddProducts:
          type: boolean
    ParentProductCategoryTreeNode:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        handle:
          type: string
        path:
          type: string
        parent:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ParentProductCategoryTreeNode'
        productsCount:
          type: integer
          format: int64
    CreateProductCategoryRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
        parentCategoryId:
          type: integer
          format: int64
        handle:
          type: string
    UpdateProductCategoryDetailsRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
    PagedResultOfProduct:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        total:
          type: integer
          format: int32
    Product:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        category:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ProductCategory2'
        parent:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ParentProduct'
        description:
          type: string
        price:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        image:
          type: string
          nullable: true
        handle:
          type: string
        hasVariants:
          type: boolean
        visibility:
          $ref: '#/components/schemas/ProductVisibility'
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOption'
    ProductCategory2:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
          nullable: true
        handle:
          type: string
        path:
          type: string
        parent:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ParentProductCategory'
        productsCount:
          type: integer
          format: int64
    ParentProduct:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        category:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/ProductCategory'
        description:
          type: string
        price:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        image:
          type: string
          nullable: true
        handle:
          type: string
    ProductVisibility:
      type: integer
      description: ''
      x-enumNames:
      - Unlisted
      - Listed
      enum:
      - 0
      - 1
    ProductAttribute:
      type: object
      additionalProperties: false
      properties:
        attribute:
          $ref: '#/components/schemas/Attribute'
        value:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AttributeValue'
        forVariant:
          type: boolean
        isMainAttribute:
          type: boolean
    Attribute:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        group:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AttributeGroup'
        values:
          type: array
          items:
            $ref: '#/components/schemas/AttributeValue'
    AttributeGroup:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
    AttributeValue:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        seq:
          type: integer
          format: int32
          nullable: true
    ProductOption:
      type: object
      additionalProperties: false
      properties:
        option:
          $ref: '#/components/schemas/Option'
        isInherited:
          type: boolean
    Option:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        optionType:
          $ref: '#/components/schemas/OptionType'
        group:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OptionGroup'
        isRequired:
          type: boolean
        sku:
          type: string
          nullable: true
        price:
          type: number
          format: decimal
          nullable: true
        isSelected:
          type: boolean
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/OptionValue'
        defaultValue:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OptionValue'
        minNumericalValue:
          type: integer
          format: int32
          nullable: true
        maxNumericalValue:
          type: integer
          format: int32
          nullable: true
        defaultNumericalValue:
          type: integer
          format: int32
          nullable: true
        textValueMinLength:
          type: integer
          format: int32
          nullable: true
        textValueMaxLength:
          type: integer
          format: int32
          nullable: true
        defaultTextValue:
          type: string
          nullable: true
    OptionType:
      type: integer
      description: ''
      x-enumNames:
      - YesOrNo
      - Choice
      - NumericalValue
      - TextValue
      enum:
      - 0
      - 1
      - 2
      - 3
    OptionGroup:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        seq:
          type: integer
          format: int32
          nullable: true
        min:
          type: integer
          format: int32
          nullable: true
        max:
          type: integer
          format: int32
          nullable: true
    OptionValue:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        sku:
          type: string
          nullable: true
        price:
          type: number
          format: decimal
          nullable: true
        seq:
          type: integer
          format: int32
          nullable: true
    SortDirection:
      type: string
      description: ''
      x-enumNames:
      - Desc
      - Asc
      enum:
      - Desc
      - Asc
    CreateProductRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
        categoryId:
          type: integer
          format: int64
        price:
          type: number
          format: decimal
        handle:
          type: string
    UpdateProductDetailsRequest:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
    UpdateProductPriceRequest:
      type: object
      additionalProperties: false
      properties:
        price:
          type: number
          format: decimal
    UpdateProductHandleRequest:
      type: object
      additionalProperties: false
      properties:
        handle:
          type: string
    UpdateProductCategoryRequest:
      type: object
      additionalProperties: false
      properties:
        productCategoryId:
          type: integer
          format: int64
    PagedResultOfStore:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Store'
        total:
          type: integer
          format: int32
    Store:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        handle:
          type: string
        currency:
          $ref: '#/components/schemas/Currency'
    Currency:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
        name:
          type: string
        symbol:
          type: string
    CreateStore:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        currency:
          type: string
    UpdateStore:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        currency:
          type: string
    CreateProductOptionData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        optionType:
          $ref: '#/components/schemas/OptionType'
        group:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/OptionGroup'
        isSelected:
          type: boolean
          nullable: true
        sku:
          type: string
          nullable: true
        price:
          type: number
          format: decimal
          nullable: true
        groupId:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/CreateProductOptionValueData'
        defaultOptionValueId:
          type: string
          nullable: true
        minNumericalValue:
          type: integer
          format: int32
          nullable: true
        maxNumericalValue:
          type: integer
          format: int32
          nullable: true
        defaultNumericalValue:
          type: integer
          format: int32
          nullable: true
        textValueMinLength:
          type: integer
          format: int32
          nullable: true
        textValueMaxLength:
          type: integer
          format: int32
          nullable: true
        defaultTextValue:
          type: string
          nullable: true
    CreateProductOptionValueData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        sku:
          type: string
          nullable: true
        price:
          type: number
          format: decimal
          nullable: true
    UpdateProductOptionData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        isSelected:
          type: boolean
          nullable: true
        sku:
          type: string
          nullable: true
        price:
          type: number
          format: decimal
          nullable: true
        groupId:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/UpdateProductOptionValueData'
        defaultOptionValueId:
          type: string
          nullable: true
        minNumericalValue:
          type: integer
          format: int32
          nullable: true
        maxNumericalValue:
          type: integer
          format: int32
          nullable: true
        defaultNumericalValue:
          type: integer
          format: int32
          nullable: true
        textValueMinLength:
          type: integer
          format: int32
          nullable: true
        textValueMaxLength:
          type: integer
          format: int32
          nullable: true
        defaultTextValue:
          type: string
          nullable: true
    UpdateProductOptionValueData:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
        sku:
          type: string
          nullable: true
        price:
          type: number
          format: decimal
          nullable: true
    CreateProductOptionGroupData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        min:
          type: integer
          format: int32
          nullable: true
        max:
          type: integer
          format: int32
          nullable: true
    UpdateProductOptionGroupData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        min:
          type: integer
          format: int32
          nullable: true
        max:
          type: integer
          format: int32
          nullable: true
    ProductVariantAttribute:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        value:
          type: string
          nullable: true
        valueId:
          type: string
          nullable: true
        isMainAttribute:
          type: boolean
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    CreateProductVariantData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
        description:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
        price:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/CreateProductVariantAttributeData'
    CreateProductVariantAttributeData:
      type: object
      additionalProperties: false
      properties:
        attributeId:
          type: string
        valueId:
          type: string
    UpdateProductVariantData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        id:
          type: string
        price:
          type: number
          format: decimal
        regularPrice:
          type: number
          format: decimal
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/UpdateProductVariantAttributeData'
    UpdateProductVariantAttributeData:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        attributeId:
          type: string
        valueId:
          type: string
    PagedResultOfAttribute:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
        total:
          type: integer
          format: int32
    CreateAttribute:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        groupId:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/CreateProductAttributeValueData'
    CreateProductAttributeValueData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
    UpdateAttribute:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        groupId:
          type: string
          nullable: true
        values:
          type: array
          items:
            $ref: '#/components/schemas/UpdateProductAttributeValueData'
    UpdateProductAttributeValueData:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          nullable: true
        name:
          type: string
    CreateProductAttributeGroupData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
    UpdateProductAttributeGroupData:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
    PagedResultOfCurrency:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
        total:
          type: integer
          format: int32
    PagedResultOfBrand:
      type: object
      additionalProperties: false
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Brand'
        total:
          type: integer
          format: int32
    Brand:
      type: object
      additionalProperties: false
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        handle:
          type: string
    CreateBrand:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
    UpdateBrand:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        handle:
          type: string
